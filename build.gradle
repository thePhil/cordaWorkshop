buildscript {
    ext {
        kotlin_version = '1.3.20'
        spring_boot_version = '2.1.3.RELEASE'
        spring_dep_mgmt_version = '1.0.6.RELEASE'
        spring_shell_version = '2.0.1.BUILD-SNAPSHOT'
        spring_fox_version = '2.9.2'
        junit_compile_version = '4.12'
        junit_version = '5.1.0'
        jib_version = '1.0.0'
    }

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}")
        classpath("io.spring.gradle:dependency-management-plugin:${spring_dep_mgmt_version}")
        classpath("gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:${jib_version}")

    }
}

allprojects {
    group = 'com.swissre.tecconference'
}

subprojects {
    buildscript {
        repositories {
            mavenCentral()
            jcenter()
            maven {
                url "https://plugins.gradle.org/m2/"
            }
        }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}")
            classpath("io.spring.gradle:dependency-management-plugin:${spring_dep_mgmt_version}")
            classpath("gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:${jib_version}")
        }
    }

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "com.google.cloud.tools.jib"

    sourceCompatibility = '1.8'

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'

//        testCompileOnly(
//                "junit:junit:${junit_compile_version}"
//        )
//        testImplementation(
//                "org.junit.jupiter:junit-jupiter-api:${junit_version}"
//        )
//        testRuntimeOnly(
//                "org.junit.jupiter:junit-jupiter-engine:${junit_version}",
//                "org.junit.vintage:junit-vintage-engine:${junit_version}"
//        )
    }

//    test {
//        useJUnitPlatform()
//    }
}
